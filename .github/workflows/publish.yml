name: Build and publish
on: [push, pull_request]

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - master
#       - develop
#       - beta

jobs:
  build:
    runs-on: ${{ matrix.os }} 
    # if: github.event.pull_request.merged
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.7]
    env:
      PIP_USERNAME: ${{ secrets.PIP_USERNAME }}
      PIP_PASSWORD: ${{ secrets.PIP_PASSWORD }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install host dependencies
      run: |
        sudo apt-get install libudev-dev
        sudo apt-get install libusb-1.0-0-dev
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e .[dev]
        pip install wheel
    - name: Build library
      run: |
        export BRANCH=${GITHUB_REF##*/}
        echo "Branch $BRANCH"
        export VERSION=$(bash ./scripts/calculate_version.sh)
        echo "::set-env name=VERSION::$VERSION"
        echo "Version $VERSION"
        bash ./scripts/build.sh $VERSION $BRANCH
        export OS=`uname -s`-`uname -m`
        export EXECUTABLE_NAME=sk-val-$VERSION-$OS
        echo "::set-env name=EXECUTABLE_NAME::$EXECUTABLE_NAME"
    - name: Upload to DO
      run: |
        bash ./scripts/upload_to_do.sh
    - name: Checkout code
      uses: actions/checkout@master
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: true
    - name: Add binary to release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/${{ env.EXECUTABLE_NAME }}
        asset_name: ${{ env.EXECUTABLE_NAME }}
        asset_content_type: application/octet-stream